class Solution {
public:
    bool wordPattern(string pattern, string s) {
        stringstream ss(s); 
        string w;
        vector<string>word;
        unordered_map<char,string>m1;
        unordered_map<string,char>m2;

        while(ss>>w){
            word.push_back(w);
        }
        if(word.size()!=pattern.size())return 0;
        

        for(int i=0;i<pattern.size();i++){
            char c=pattern[i];
            string s1=word[i];
           
           if(m1.find(c)!=m1.end()&& m1[c]!=s1) return 0;
           else if(m2.find(s1)!=m2.end() && m2[s1]!=c) return 0;
           else{
            m1[c]=s1;
            m2[s1]=c;
           }
        }   
    return 1;
    }
};
